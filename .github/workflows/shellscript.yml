name: auth-server

# 워크플로우가 트리거 될 이벤트들 명시
on:
# push나 pull request가 일어나면 동작하도록 구현
 [push, pull_request]

# 워크플로우에서 실행할 job
jobs:
  # job의 이름
  auth-server:
    # job이 돌아갈 환경
    runs-on: ubuntu-latest

    # job에서 동작할 task들의 모음
    steps:
      # 오픈소스 커뮤니티의 액션을 사용할 것을 명시
      # 이 액션은 로컬 리포지토리의 환경을 러너로 복사하는 액션
      - uses: actions/checkout@v2

      # task의 이름과 동작시킬 스크립트(한줄짜리)
      # - name: Run a one-line script
      #   run: echo Hello, world!

      # task의 이름과 동작시킬 스크립트(두줄 이상)
      - name: ecs service
        run: |
          ecs-cli configure --cluster project4-devterr --default-launch-type EC2 --config-name project4-devterr --region ap-northeast-2
          ecs-cli configure profile --access-key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret-key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile-name project4-devterr

      - name: ec2
        run: |  
          ecs-cli up --keypair projectju --capability-iam --size 1 --instance-type t2.medium --cluster-config project4-devterr --ecs-profile project4-devterr --vpc vpc-0df90a1ab0fc11825 --security-group sg-07da5f154b06ec072 --subnets subnet-017da35bd76404302,subnet-0f2478bfa3bd03b9b
          ecs-cli compose service up --cluster-config project4-devterr --ecs-profile project4-devterr --target-groups "targetGroupArn=arn:aws:elasticloadbalancing:ap-northeast-2:060701521359:targetgroup/dev-app-dev-tg2/a684b396dda35c01,containerName=node-app,containerPort=3005" --vpc vpc-0df90a1ab0fc11825

