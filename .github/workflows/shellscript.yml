name: auth-server

# 워크플로우가 트리거 될 이벤트들 명시
on:
# push나 pull request가 일어나면 동작하도록 구현
 [push, pull_request]

# 워크플로우에서 실행할 job
jobs:


  auth-server1:
    # job이 돌아갈 환경
    # needs: auth-server1
    runs-on: ubuntu-latest
    defaults :
      run :
        shell : bash
        working-directory : docker-compose/

    # job에서 동작할 task들의 모음
    steps:
      - uses: actions/checkout@v2
      - uses: marocchino/setup-ecs-cli@v1
        with:
          version: "v1.18.0"
      - name: ecs service
        run: |
          ecs-cli configure --cluster project4-dev --default-launch-type EC2 --config-name project4-dev --region ap-northeast-2
          ecs-cli configure profile --access-key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret-key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile-name project4-dev
          # ecs-cli up --keypair projectju --capability-iam --size 2 --instance-type t2.medium --cluster-config project4-dev --ecs-profile project4-dev --vpc vpc-0e5396ed9cc3ae48c --security-group sg-098d956e568fda953 --subnets subnet-057a319cd0a0fd0d0,subnet-0fb9e41432ec73fe9 --region ap-northeast-2
          ecs-cli compose up --cluster-config project4-dev --ecs-profile project4-dev --cluster project4-dev --launch-type EC2 --force-update
          ecs-cli compose service create --cluster-config project4-dev --ecs-profile project4-dev --target-groups "targetGroupArn=arn:aws:elasticloadbalancing:ap-northeast-2:060701521359:targetgroup/dev-app-dev-tg2/509b951524217429,containerName=node-app,containerPort=3005" --vpc vpc-0e5396ed9cc3ae48c --launch-type EC2
          # ecs-cli compose up --cluster-config project4-dev --ecs-profile project4-dev --cluster project4-dev --launch-type EC2 --force-update

          